= simple_form_for(transaction, remote: true, html: { class: 'transaction' }) do |f|
  = f.error_notification
  .col-sm-9
    .col-md-3.col-sm-6.col-xs-6
      = f.input :amount, label: false,
        input_html: { value: f.object.amount == 0 ? nil : f.object.amount }
    .col-md-3.col-sm-6.col-xs-6
      - if f.object.category.try(:system?)
        = f.input :category, label: false, disabled: true
      - else
        = f.association :category, as: :grouped_select,
          collection: current_organization.categories.grouped_by_type,
          group_method: :last, prompt: 'Category', label: false, value_method: :id,
          selected: @q.nil? ? f.object.category_id \
            : (@q.category_id_eq && !Category.find(@q.category_id_eq).system? \
            ? @q.category_id_eq : nil)

    .col-md-3.col-sm-6.col-xs-6
      - if f.object.customer_id
        = f.association :customer, as: :select,
          collection: current_organization.customers, prompt: 'Customer', label: false,
          value_method: :id, selected: f.object.customer_id
      - else
        = f.input :customer_name, label: false,
          input_html: { data: { url: autocomplete_customers_path,
            placeholder: 'Customer',
            value: @q.nil? ? nil : transaction.find_customer_name_by_id(@q.customer_id_eq) } }

    .col-md-3.col-sm-6.col-xs-6
      - if f.object.bank_account.nil? || f.object.bank_account.visible?
        = f.association :bank_account, as: :grouped_select, label: false,
          collection: current_organization.bank_accounts.visible.positioned.grouped_by_currency(current_organization.default_currency),
          prompt: 'Bank account', group_method: :last,
          selected: @q.nil? ? f.object.bank_account_id \
            : (@q.bank_account_id_eq && current_organization.bank_accounts.find(@q.bank_account_id_eq).visible? \
            ? @q.bank_account_id_eq : nil)
      - else
        = f.input :bank_account, label: false, disabled: true
    .col-md-3.col-sm-6.col-xs-6
      = f.input :comment, label: false
    .col-md-3.col-sm-6.col-xs-6
      = f.input :date, as: :string, label: false, placeholder: 'Date',
        input_html: { class: 'datepicker', value: f.object.date.try(:strftime, '%d/%m/%Y') }
  .col-sm-3
    = render 'transactions/btn_block', f: f, transaction: transaction, selected: 'Transaction'
